<div class="Holder" x-data="{
  files:[],
  customProp:{},
  parseFiles:(data) => {
    let fileArray = [];
    if (
      components[${ap}].numFilesIn == -1 ||
      data.length - 1 < components[${ap}].numFilesIn ||
      data.length == components[${ap}].numFilesIn ||
      data.length > 0
    ) {
      Array.from(data).forEach((e: any) => {
        if (e.size < 536870912) {
          if (
            fdict[components[${ap}].params.ftypeskey].some(
              (t) => t == e.type.split('/')[1]
            )
          ) {
            if (e.name.split('.')[1] == e.type.split('/')[1]) {
              fileArray.push(e);
            } else alert('filetype must match filename for file ' + e.name);
          } else
            alert(
              `we do not accept the filetype ${
                e.type.split('/')[1]
              } for this converter`
            );
        } else alert('file is over our size limit(512mb)');
        if (fileArray != []) setFiles(fileArray);
      });
    } else
      alert(
        `you are over the file limit, you can only upload ${props.numFilesIn} files`
      );
  }
}">
  <input class="FileInput" type="file" multiple="components[${ap}].params.allowMultiFile || false"
    onChange="parseFiles($event.target.files)" />
  ${ch}
  <a class="FormButton"
    @click="components[${ap}].params.files=files;components[${ap}].params[components[${ap}].params.uplSubType]=customProp">
    Upload file(s)
  </a>
</div>